// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: proto/message.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Supported top-level message types
type MessageType int32

const (
	MessageType_TEXT    MessageType = 0
	MessageType_MEDIA   MessageType = 1
	MessageType_CALL    MessageType = 2
	MessageType_CONTROL MessageType = 3 // e.g., group/device management
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "TEXT",
		1: "MEDIA",
		2: "CALL",
		3: "CONTROL",
	}
	MessageType_value = map[string]int32{
		"TEXT":    0,
		"MEDIA":   1,
		"CALL":    2,
		"CONTROL": 3,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_message_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_proto_message_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{0}
}

type CallType int32

const (
	CallType_VOICE CallType = 0
	CallType_VIDEO CallType = 1
	CallType_GROUP CallType = 2
)

// Enum value maps for CallType.
var (
	CallType_name = map[int32]string{
		0: "VOICE",
		1: "VIDEO",
		2: "GROUP",
	}
	CallType_value = map[string]int32{
		"VOICE": 0,
		"VIDEO": 1,
		"GROUP": 2,
	}
)

func (x CallType) Enum() *CallType {
	p := new(CallType)
	*p = x
	return p
}

func (x CallType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_message_proto_enumTypes[1].Descriptor()
}

func (CallType) Type() protoreflect.EnumType {
	return &file_proto_message_proto_enumTypes[1]
}

func (x CallType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallType.Descriptor instead.
func (CallType) EnumDescriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{1}
}

type GroupAction int32

const (
	GroupAction_CREATE GroupAction = 0
	GroupAction_INVITE GroupAction = 1
	GroupAction_REMOVE GroupAction = 2
	GroupAction_LEAVE  GroupAction = 3
	GroupAction_UPDATE GroupAction = 4 // e.g., name, avatar
)

// Enum value maps for GroupAction.
var (
	GroupAction_name = map[int32]string{
		0: "CREATE",
		1: "INVITE",
		2: "REMOVE",
		3: "LEAVE",
		4: "UPDATE",
	}
	GroupAction_value = map[string]int32{
		"CREATE": 0,
		"INVITE": 1,
		"REMOVE": 2,
		"LEAVE":  3,
		"UPDATE": 4,
	}
)

func (x GroupAction) Enum() *GroupAction {
	p := new(GroupAction)
	*p = x
	return p
}

func (x GroupAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupAction) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_message_proto_enumTypes[2].Descriptor()
}

func (GroupAction) Type() protoreflect.EnumType {
	return &file_proto_message_proto_enumTypes[2]
}

func (x GroupAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupAction.Descriptor instead.
func (GroupAction) EnumDescriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{2}
}

type DeviceAction int32

const (
	DeviceAction_LINK   DeviceAction = 0
	DeviceAction_UNLINK DeviceAction = 1
	DeviceAction_SYNC   DeviceAction = 2 // Sync keys/messages
)

// Enum value maps for DeviceAction.
var (
	DeviceAction_name = map[int32]string{
		0: "LINK",
		1: "UNLINK",
		2: "SYNC",
	}
	DeviceAction_value = map[string]int32{
		"LINK":   0,
		"UNLINK": 1,
		"SYNC":   2,
	}
)

func (x DeviceAction) Enum() *DeviceAction {
	p := new(DeviceAction)
	*p = x
	return p
}

func (x DeviceAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceAction) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_message_proto_enumTypes[3].Descriptor()
}

func (DeviceAction) Type() protoreflect.EnumType {
	return &file_proto_message_proto_enumTypes[3]
}

func (x DeviceAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceAction.Descriptor instead.
func (DeviceAction) EnumDescriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{3}
}

// -----------------------------
// Core Envelope
// -----------------------------
type MessageEnvelope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // Unique message ID (UUID)
	SenderId      string                 `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`          // Encrypted sender identity (sealed sender)
	RecipientId   string                 `protobuf:"bytes,3,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"` // Recipient (user, group, or device)
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                       // Unix time (ms)
	Ciphertext    []byte                 `protobuf:"bytes,5,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`                      // Encrypted MessagePayload
	Type          MessageType            `protobuf:"varint,6,opt,name=type,proto3,enum=connexa.MessageType" json:"type,omitempty"`        // Message type
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageEnvelope) Reset() {
	*x = MessageEnvelope{}
	mi := &file_proto_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEnvelope) ProtoMessage() {}

func (x *MessageEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEnvelope.ProtoReflect.Descriptor instead.
func (*MessageEnvelope) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{0}
}

func (x *MessageEnvelope) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageEnvelope) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *MessageEnvelope) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *MessageEnvelope) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MessageEnvelope) GetCiphertext() []byte {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

func (x *MessageEnvelope) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_TEXT
}

// -----------------------------
// Payload (decrypted content)
// -----------------------------
type MessagePayload struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	SenderDevice string                 `protobuf:"bytes,1,opt,name=sender_device,json=senderDevice,proto3" json:"sender_device,omitempty"` // Device ID of sender
	// Types that are valid to be assigned to Content:
	//
	//	*MessagePayload_Text
	//	*MessagePayload_Media
	//	*MessagePayload_Call
	//	*MessagePayload_Control
	Content       isMessagePayload_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessagePayload) Reset() {
	*x = MessagePayload{}
	mi := &file_proto_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessagePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePayload) ProtoMessage() {}

func (x *MessagePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePayload.ProtoReflect.Descriptor instead.
func (*MessagePayload) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{1}
}

func (x *MessagePayload) GetSenderDevice() string {
	if x != nil {
		return x.SenderDevice
	}
	return ""
}

func (x *MessagePayload) GetContent() isMessagePayload_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *MessagePayload) GetText() *TextMessage {
	if x != nil {
		if x, ok := x.Content.(*MessagePayload_Text); ok {
			return x.Text
		}
	}
	return nil
}

func (x *MessagePayload) GetMedia() *MediaMessage {
	if x != nil {
		if x, ok := x.Content.(*MessagePayload_Media); ok {
			return x.Media
		}
	}
	return nil
}

func (x *MessagePayload) GetCall() *CallMessage {
	if x != nil {
		if x, ok := x.Content.(*MessagePayload_Call); ok {
			return x.Call
		}
	}
	return nil
}

func (x *MessagePayload) GetControl() *ControlMessage {
	if x != nil {
		if x, ok := x.Content.(*MessagePayload_Control); ok {
			return x.Control
		}
	}
	return nil
}

type isMessagePayload_Content interface {
	isMessagePayload_Content()
}

type MessagePayload_Text struct {
	Text *TextMessage `protobuf:"bytes,2,opt,name=text,proto3,oneof"`
}

type MessagePayload_Media struct {
	Media *MediaMessage `protobuf:"bytes,3,opt,name=media,proto3,oneof"`
}

type MessagePayload_Call struct {
	Call *CallMessage `protobuf:"bytes,4,opt,name=call,proto3,oneof"`
}

type MessagePayload_Control struct {
	Control *ControlMessage `protobuf:"bytes,5,opt,name=control,proto3,oneof"`
}

func (*MessagePayload_Text) isMessagePayload_Content() {}

func (*MessagePayload_Media) isMessagePayload_Content() {}

func (*MessagePayload_Call) isMessagePayload_Content() {}

func (*MessagePayload_Control) isMessagePayload_Content() {}

// -----------------------------
// Text
// -----------------------------
type TextMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Body          string                 `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextMessage) Reset() {
	*x = TextMessage{}
	mi := &file_proto_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextMessage) ProtoMessage() {}

func (x *TextMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextMessage.ProtoReflect.Descriptor instead.
func (*TextMessage) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{2}
}

func (x *TextMessage) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

// -----------------------------
// Media
// -----------------------------
type MediaMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	MimeType      string                 `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	FileSize      int64                  `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	MediaKey      []byte                 `protobuf:"bytes,4,opt,name=media_key,json=mediaKey,proto3" json:"media_key,omitempty"` // Symmetric key for decryption
	MediaUrl      string                 `protobuf:"bytes,5,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"` // Location (encrypted blob in S3/IPFS/etc.)
	Thumbnail     *Thumbnail             `protobuf:"bytes,6,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaMessage) Reset() {
	*x = MediaMessage{}
	mi := &file_proto_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaMessage) ProtoMessage() {}

func (x *MediaMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaMessage.ProtoReflect.Descriptor instead.
func (*MediaMessage) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{3}
}

func (x *MediaMessage) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *MediaMessage) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *MediaMessage) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *MediaMessage) GetMediaKey() []byte {
	if x != nil {
		return x.MediaKey
	}
	return nil
}

func (x *MediaMessage) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *MediaMessage) GetThumbnail() *Thumbnail {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

type Thumbnail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // Small preview image (encrypted)
	Width         int32                  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32                  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Thumbnail) Reset() {
	*x = Thumbnail{}
	mi := &file_proto_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Thumbnail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thumbnail) ProtoMessage() {}

func (x *Thumbnail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thumbnail.ProtoReflect.Descriptor instead.
func (*Thumbnail) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{4}
}

func (x *Thumbnail) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Thumbnail) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Thumbnail) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

// -----------------------------
// Calls (WebRTC signaling)
// -----------------------------
type CallMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CallId        string                 `protobuf:"bytes,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	CallType      CallType               `protobuf:"varint,2,opt,name=call_type,json=callType,proto3,enum=connexa.CallType" json:"call_type,omitempty"`
	Sdp           string                 `protobuf:"bytes,3,opt,name=sdp,proto3" json:"sdp,omitempty"`               // Session description (offer/answer)
	Candidates    []string               `protobuf:"bytes,4,rep,name=candidates,proto3" json:"candidates,omitempty"` // ICE candidates
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallMessage) Reset() {
	*x = CallMessage{}
	mi := &file_proto_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallMessage) ProtoMessage() {}

func (x *CallMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallMessage.ProtoReflect.Descriptor instead.
func (*CallMessage) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{5}
}

func (x *CallMessage) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *CallMessage) GetCallType() CallType {
	if x != nil {
		return x.CallType
	}
	return CallType_VOICE
}

func (x *CallMessage) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

func (x *CallMessage) GetCandidates() []string {
	if x != nil {
		return x.Candidates
	}
	return nil
}

// -----------------------------
// Control Messages
// -----------------------------
type ControlMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Action:
	//
	//	*ControlMessage_Group
	//	*ControlMessage_Device
	Action        isControlMessage_Action `protobuf_oneof:"action"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlMessage) Reset() {
	*x = ControlMessage{}
	mi := &file_proto_message_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage) ProtoMessage() {}

func (x *ControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{6}
}

func (x *ControlMessage) GetAction() isControlMessage_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *ControlMessage) GetGroup() *GroupControl {
	if x != nil {
		if x, ok := x.Action.(*ControlMessage_Group); ok {
			return x.Group
		}
	}
	return nil
}

func (x *ControlMessage) GetDevice() *DeviceControl {
	if x != nil {
		if x, ok := x.Action.(*ControlMessage_Device); ok {
			return x.Device
		}
	}
	return nil
}

type isControlMessage_Action interface {
	isControlMessage_Action()
}

type ControlMessage_Group struct {
	Group *GroupControl `protobuf:"bytes,1,opt,name=group,proto3,oneof"`
}

type ControlMessage_Device struct {
	Device *DeviceControl `protobuf:"bytes,2,opt,name=device,proto3,oneof"`
}

func (*ControlMessage_Group) isControlMessage_Action() {}

func (*ControlMessage_Device) isControlMessage_Action() {}

// Group management (create, invite, remove, leave)
type GroupControl struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Action        GroupAction            `protobuf:"varint,2,opt,name=action,proto3,enum=connexa.GroupAction" json:"action,omitempty"`
	Members       []string               `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"` // Affected members
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupControl) Reset() {
	*x = GroupControl{}
	mi := &file_proto_message_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupControl) ProtoMessage() {}

func (x *GroupControl) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupControl.ProtoReflect.Descriptor instead.
func (*GroupControl) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{7}
}

func (x *GroupControl) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupControl) GetAction() GroupAction {
	if x != nil {
		return x.Action
	}
	return GroupAction_CREATE
}

func (x *GroupControl) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

// Device linking (multi-device support)
type DeviceControl struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Action        DeviceAction           `protobuf:"varint,2,opt,name=action,proto3,enum=connexa.DeviceAction" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceControl) Reset() {
	*x = DeviceControl{}
	mi := &file_proto_message_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceControl) ProtoMessage() {}

func (x *DeviceControl) ProtoReflect() protoreflect.Message {
	mi := &file_proto_message_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceControl.ProtoReflect.Descriptor instead.
func (*DeviceControl) Descriptor() ([]byte, []int) {
	return file_proto_message_proto_rawDescGZIP(), []int{8}
}

func (x *DeviceControl) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceControl) GetAction() DeviceAction {
	if x != nil {
		return x.Action
	}
	return DeviceAction_LINK
}

var File_proto_message_proto protoreflect.FileDescriptor

const file_proto_message_proto_rawDesc = "" +
	"\n" +
	"\x13proto/message.proto\x12\aconnexa\"\xc9\x01\n" +
	"\x0fMessageEnvelope\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\tR\bsenderId\x12!\n" +
	"\frecipient_id\x18\x03 \x01(\tR\vrecipientId\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x1e\n" +
	"\n" +
	"ciphertext\x18\x05 \x01(\fR\n" +
	"ciphertext\x12(\n" +
	"\x04type\x18\x06 \x01(\x0e2\x14.connexa.MessageTypeR\x04type\"\xfc\x01\n" +
	"\x0eMessagePayload\x12#\n" +
	"\rsender_device\x18\x01 \x01(\tR\fsenderDevice\x12*\n" +
	"\x04text\x18\x02 \x01(\v2\x14.connexa.TextMessageH\x00R\x04text\x12-\n" +
	"\x05media\x18\x03 \x01(\v2\x15.connexa.MediaMessageH\x00R\x05media\x12*\n" +
	"\x04call\x18\x04 \x01(\v2\x14.connexa.CallMessageH\x00R\x04call\x123\n" +
	"\acontrol\x18\x05 \x01(\v2\x17.connexa.ControlMessageH\x00R\acontrolB\t\n" +
	"\acontent\"!\n" +
	"\vTextMessage\x12\x12\n" +
	"\x04body\x18\x01 \x01(\tR\x04body\"\xd1\x01\n" +
	"\fMediaMessage\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\x12\x1b\n" +
	"\tmime_type\x18\x02 \x01(\tR\bmimeType\x12\x1b\n" +
	"\tfile_size\x18\x03 \x01(\x03R\bfileSize\x12\x1b\n" +
	"\tmedia_key\x18\x04 \x01(\fR\bmediaKey\x12\x1b\n" +
	"\tmedia_url\x18\x05 \x01(\tR\bmediaUrl\x120\n" +
	"\tthumbnail\x18\x06 \x01(\v2\x12.connexa.ThumbnailR\tthumbnail\"M\n" +
	"\tThumbnail\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x14\n" +
	"\x05width\x18\x02 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x03 \x01(\x05R\x06height\"\x88\x01\n" +
	"\vCallMessage\x12\x17\n" +
	"\acall_id\x18\x01 \x01(\tR\x06callId\x12.\n" +
	"\tcall_type\x18\x02 \x01(\x0e2\x11.connexa.CallTypeR\bcallType\x12\x10\n" +
	"\x03sdp\x18\x03 \x01(\tR\x03sdp\x12\x1e\n" +
	"\n" +
	"candidates\x18\x04 \x03(\tR\n" +
	"candidates\"{\n" +
	"\x0eControlMessage\x12-\n" +
	"\x05group\x18\x01 \x01(\v2\x15.connexa.GroupControlH\x00R\x05group\x120\n" +
	"\x06device\x18\x02 \x01(\v2\x16.connexa.DeviceControlH\x00R\x06deviceB\b\n" +
	"\x06action\"q\n" +
	"\fGroupControl\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12,\n" +
	"\x06action\x18\x02 \x01(\x0e2\x14.connexa.GroupActionR\x06action\x12\x18\n" +
	"\amembers\x18\x03 \x03(\tR\amembers\"[\n" +
	"\rDeviceControl\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12-\n" +
	"\x06action\x18\x02 \x01(\x0e2\x15.connexa.DeviceActionR\x06action*9\n" +
	"\vMessageType\x12\b\n" +
	"\x04TEXT\x10\x00\x12\t\n" +
	"\x05MEDIA\x10\x01\x12\b\n" +
	"\x04CALL\x10\x02\x12\v\n" +
	"\aCONTROL\x10\x03*+\n" +
	"\bCallType\x12\t\n" +
	"\x05VOICE\x10\x00\x12\t\n" +
	"\x05VIDEO\x10\x01\x12\t\n" +
	"\x05GROUP\x10\x02*H\n" +
	"\vGroupAction\x12\n" +
	"\n" +
	"\x06CREATE\x10\x00\x12\n" +
	"\n" +
	"\x06INVITE\x10\x01\x12\n" +
	"\n" +
	"\x06REMOVE\x10\x02\x12\t\n" +
	"\x05LEAVE\x10\x03\x12\n" +
	"\n" +
	"\x06UPDATE\x10\x04*.\n" +
	"\fDeviceAction\x12\b\n" +
	"\x04LINK\x10\x00\x12\n" +
	"\n" +
	"\x06UNLINK\x10\x01\x12\b\n" +
	"\x04SYNC\x10\x02B+Z)github.com/NunyaHotor/Connexa/proto;protob\x06proto3"

var (
	file_proto_message_proto_rawDescOnce sync.Once
	file_proto_message_proto_rawDescData []byte
)

func file_proto_message_proto_rawDescGZIP() []byte {
	file_proto_message_proto_rawDescOnce.Do(func() {
		file_proto_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_message_proto_rawDesc), len(file_proto_message_proto_rawDesc)))
	})
	return file_proto_message_proto_rawDescData
}

var file_proto_message_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_message_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_message_proto_goTypes = []any{
	(MessageType)(0),        // 0: connexa.MessageType
	(CallType)(0),           // 1: connexa.CallType
	(GroupAction)(0),        // 2: connexa.GroupAction
	(DeviceAction)(0),       // 3: connexa.DeviceAction
	(*MessageEnvelope)(nil), // 4: connexa.MessageEnvelope
	(*MessagePayload)(nil),  // 5: connexa.MessagePayload
	(*TextMessage)(nil),     // 6: connexa.TextMessage
	(*MediaMessage)(nil),    // 7: connexa.MediaMessage
	(*Thumbnail)(nil),       // 8: connexa.Thumbnail
	(*CallMessage)(nil),     // 9: connexa.CallMessage
	(*ControlMessage)(nil),  // 10: connexa.ControlMessage
	(*GroupControl)(nil),    // 11: connexa.GroupControl
	(*DeviceControl)(nil),   // 12: connexa.DeviceControl
}
var file_proto_message_proto_depIdxs = []int32{
	0,  // 0: connexa.MessageEnvelope.type:type_name -> connexa.MessageType
	6,  // 1: connexa.MessagePayload.text:type_name -> connexa.TextMessage
	7,  // 2: connexa.MessagePayload.media:type_name -> connexa.MediaMessage
	9,  // 3: connexa.MessagePayload.call:type_name -> connexa.CallMessage
	10, // 4: connexa.MessagePayload.control:type_name -> connexa.ControlMessage
	8,  // 5: connexa.MediaMessage.thumbnail:type_name -> connexa.Thumbnail
	1,  // 6: connexa.CallMessage.call_type:type_name -> connexa.CallType
	11, // 7: connexa.ControlMessage.group:type_name -> connexa.GroupControl
	12, // 8: connexa.ControlMessage.device:type_name -> connexa.DeviceControl
	2,  // 9: connexa.GroupControl.action:type_name -> connexa.GroupAction
	3,  // 10: connexa.DeviceControl.action:type_name -> connexa.DeviceAction
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_message_proto_init() }
func file_proto_message_proto_init() {
	if File_proto_message_proto != nil {
		return
	}
	file_proto_message_proto_msgTypes[1].OneofWrappers = []any{
		(*MessagePayload_Text)(nil),
		(*MessagePayload_Media)(nil),
		(*MessagePayload_Call)(nil),
		(*MessagePayload_Control)(nil),
	}
	file_proto_message_proto_msgTypes[6].OneofWrappers = []any{
		(*ControlMessage_Group)(nil),
		(*ControlMessage_Device)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_message_proto_rawDesc), len(file_proto_message_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_message_proto_goTypes,
		DependencyIndexes: file_proto_message_proto_depIdxs,
		EnumInfos:         file_proto_message_proto_enumTypes,
		MessageInfos:      file_proto_message_proto_msgTypes,
	}.Build()
	File_proto_message_proto = out.File
	file_proto_message_proto_goTypes = nil
	file_proto_message_proto_depIdxs = nil
}
